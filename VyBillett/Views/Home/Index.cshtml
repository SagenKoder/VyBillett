@model VyBillett.Models.TicketDTO

@{
    ViewData["Title"] = "Home Page";
}

<div class="container">
    <div class="row my-5 text-dark">
        <h1>Hei, hvor vil du reise?</h1>
    </div>
</div>

<div class="container">
    @using (Html.BeginForm("Index", "Home", FormMethod.Post, new {@id = "form" }))
    {

        <div class="form-row">
            <div class="col-md-6">
                <label for="station-from">Reise fra</label>
                <div class="input-group-lg mb-3">
                    @Html.TextBoxFor(model => model.From, new
                    {
                        @class = "form-control",
                        @id = "station-from",
                        type = "text",
                        list = "datalist-from",
                        autocomplete = "off",
                        placeholder = "Hvor vil du reise fra?"
                    })
                    <datalist id="datalist-from"></datalist>
                    @Html.ValidationMessageFor(model => model.From, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <label for="station-to">Reise til</label>
                <div class="input-group-lg mb-3">
                    @Html.TextBoxFor(model => model.To, new
                    {
                        @class = "form-control",
                        @id = "station-to",
                        type = "text",
                        list = "datalist-to",
                        autocomplete = "off",
                        placeholder = "Hvor vil du reise til?"
                    })
                    <datalist id="datalist-to"></datalist>
                    @Html.ValidationMessageFor(model => model.To, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-row">
            <div class="col-md-3">
                <label for="Date">Utreise</label>
                <div class="input-group-lg mb-3">
                    @Html.TextBoxFor(model => model.Date, new
                    {
                        @class = "form-control",
                        @id = "date-selector",
                        type="date"
                    })
                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3 offset-md-1">
                <label for="Time">Tid</label>
                <div class="input-group-lg mb-3">
                    @Html.TextBoxFor(model => model.Time, new
                    {
                        @class = "form-control",
                        type = "time",
                        @id = "time-selector"
                    })
                    @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-row" id="ticketType">
            <div class="col-md-2">
                Billett typer
                <div class="form-group">
                    <label for="type">Voksen</label>
                    @Html.TextBoxFor(model => model.Adult, new
                    {
                        @class = "form-control typeNumber",
                        @id = "adultNumber",
                        type = "number",
                        min = "0",
                        max = "10",
                        @Value = "1"
                    })
                   
                </div>
                <div class="form-group">
                    <label for="type">Barn</label>
                    @Html.TextBoxFor(model => model.Child, new
                   {
                       @class = "form-control typeNumber",
                       @id = "childrenNumber",
                       type = "number",
                       min = "0",
                       max = "10",
                       @Value = "0"
                   })
                   
                </div>
                <div class="form-group">
                    <label for="type">Student</label>
                    @Html.TextBoxFor(model => model.Student, new
                   {
                       @class = "form-control typeNumber",
                       @id = "studentNumber",
                       type = "number",
                       min = "0",
                       max = "10",
                       @Value = "0"
                   })
                   <div id="ticketTypeError" class="text-danger"></div>
                </div>

            </div>
        </div>

        <button type="submit" class="btn btn-primary">Se avganger og priser</button>
    }
</div>
<div id="totalPrice" style="font-size:30pt">120</div>
@section scripts {
    <script src="~/Scripts/form_population.js" type="text/javascript"></script>
    <script src="~/Scripts/bootstrap-input-spinner.js"></script>
    <script>
        $("input[type='number']").inputSpinner();
        
        $(window).on("load", function (event) {
            var now = new Date();
            var day = ("0" + now.getDate()).slice(-2);
            var month = ("0" + (now.getMonth() + 1)).slice(-2);

            var today = now.getFullYear()+"-"+(month)+"-"+(day) ;

            $('#date-selector').val(today);   

            var minutes = ("0" + (now.getMinutes())).slice(-2);
            var hour = ("0" + (now.getHours())).slice(-2);
            var time = (hour) + ":" + (minutes);
            console.log("Time: " + time);
            $('#time-selector').val(time);

            
        });

        const adultPrice = @ViewData["adultPrice"];
        const studentPrice = @ViewData["studentPrice"];
        const childPrice = @ViewData["childPrice"];

        const adult = document.getElementById("adultNumber");
        const student = document.getElementById("studentNumber");
        const child = document.getElementById("childrenNumber");
        

        $(window).on("load", function (event) {
            console.log("adult: " + adult);
            console.log("student" + student);
            console.log("child" + child);

            adult.addEventListener("change", totalPrice);
            student.addEventListener("change", totalPrice);
            child.addEventListener("change", totalPrice);
        });
        function totalPrice() {
            adultInt = parseInt(adult.value, 10);
            studentInt = parseInt(student.value, 10);
            childInt = parseInt(child.value, 10);

            console.log("adultInt: " + adultInt);
            console.log("adultvalue: " + adult.value);
            var totalPrice = (adultInt * adultPrice) + (studentInt * studentPrice) + (childInt * childPrice);
            document.getElementById("totalPrice").innerHTML = totalPrice;
            console.log("total: " + totalPrice);

        }
    </script>
}